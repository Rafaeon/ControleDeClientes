@model List<ContatoModel>

@{
    ViewData["Title"] = "Listagem de Clientes";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">Listagem de Clientes</h2>
        <a class="btn btn-success" role="button" asp-controller="Contato" asp-action="Criar">
            <i class="fas fa-user-plus"></i> Adicionar Cliente
        </a>
    </div>

    <!-- Filtros -->
    <div class="mb-3">
        <button id="filtrar-proximas" class="btn btn-primary">Filtrar Próximas Garantias</button>
        <button id="limpar-filtro" class="btn btn-secondary">Limpar Filtro</button>
    </div>

    <!-- Mensagens de sucesso/erro -->
    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Sucesso:</strong> @TempData["MensagemSucesso"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Erro:</strong> @TempData["MensagemErro"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Tabela de clientes -->
    <table class="table table-hover table-striped shadow-sm" id="table-contatos">
        <thead class="table-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Nome</th>
                <th scope="col">E-mail</th>
                <th scope="col">Situação</th>
                <th scope="col">Data Garantia</th>
                <th scope="col" class="text-center">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var contato in Model)
                {
                    <tr>
                        <th scope="row">@contato.Id</th>
                        <td>@contato.Nome</td>
                        <td>@contato.Email</td>
                        <td>@(contato.Situacao == ControleDeContatos.Enums.SituacaoCliente.Contrato ? "Contrato" : "Avulso")</td>
                        <td class="data-garantia">@contato.DataDeGarantia?.ToString("dd/MM/yyyy")</td>
                        <td class="text-center">
                            <div class="btn-group" role="group">
                                <a role="button" class="btn btn-primary btn-sm" asp-route-id="@contato.Id" asp-controller="Contato" asp-action="Editar">
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                                <a role="button" class="btn btn-danger btn-sm" asp-route-id="@contato.Id" asp-controller="Contato" asp-action="ApagarConfirmacao">
                                    <i class="fas fa-trash-alt"></i> Apagar
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center text-muted">Nenhum cliente cadastrado.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    // Função para calcular a diferença de dias entre duas datas
    function calcularDiferencaDias(data1, data2) {
        const diffTime = Math.abs(data2 - data1);
        return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    }

    // Função para converter data no formato dd/MM/yyyy para um objeto Date
    function converterParaDate(dataStr) {
        const partes = dataStr.split('/'); // Divide a string em [dia, mês, ano]
        const dia = parseInt(partes[0], 10);
        const mes = parseInt(partes[1], 10) - 1; // Mês é zero-based no JavaScript
        const ano = parseInt(partes[2], 10);
        return new Date(ano, mes, dia);
    }

    document.addEventListener("DOMContentLoaded", function () {
        const hoje = new Date(); // Data de hoje
        const linhas = document.querySelectorAll("#table-contatos tbody tr");

        // Adiciona o evento de filtro para o botão "Filtrar Próximas Garantias"
        document.getElementById("filtrar-proximas").addEventListener("click", function () {
            linhas.forEach(linha => {
                const colunaData = linha.querySelector(".data-garantia");
                if (colunaData) {
                    const dataGarantiaStr = colunaData.textContent.trim();
                    const dataGarantia = converterParaDate(dataGarantiaStr);
                    const diferencaDias = calcularDiferencaDias(hoje, dataGarantia);

                    // Exibe apenas as linhas com diferença de até 10 dias
                    if (diferencaDias <= 10) {
                        linha.style.display = ""; // Exibir linha
                    } else {
                        linha.style.display = "none"; // Ocultar linha
                    }
                }
            });
        });

        // Adiciona o evento de limpar filtro
        document.getElementById("limpar-filtro").addEventListener("click", function () {
            linhas.forEach(linha => {
                linha.style.display = ""; // Exibir todas as linhas
            });
        });

        // Aplica estilos conforme proximidade da data
        linhas.forEach(linha => {
            const colunaData = linha.querySelector(".data-garantia");
            if (colunaData) {
                const dataGarantiaStr = colunaData.textContent.trim();
                const dataGarantia = converterParaDate(dataGarantiaStr);
                const diferencaDias = calcularDiferencaDias(hoje, dataGarantia);

                // Aplicar estilos conforme a proximidade da data
                if (diferencaDias <= 5) {
                    linha.classList.add("custom-danger"); // Vermelho
                } else if (diferencaDias <= 10) {
                    linha.classList.add("table-warning"); // Amarelo
                }
            }   
        });
    });
</script>
<style>
    .custom-danger {
        background-color: #f5c6cb !important; /* Vermelho mais suave */
        color: #842029 !important;           /* Cor de texto */
    }
</style>